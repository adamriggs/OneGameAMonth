// com.adam.utils.Stats// Adam Riggs//package com.app.view {	import com.adam.events.MuleEvent;	import com.adam.utils.AppData;	import com.greensock.TweenLite;		import flash.display.Sprite;	import flash.events.*;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.utils.getTimer;		public class Stats extends TextField {				//vars		private var _title:String;		private var _time:int;		private var _prevTime:int;		private var _framecount:int;		private var _textColor:int;				//objects		private var appData:AppData=AppData.instance;				//const		public const NAME:String="stats";		public const RETURNTYPE:String=NAME;				public function Stats(inTitle:String="Stats", inX:int=0, inY:int=0, inColor:int = 0xFFFFFF){			_title=inTitle;			_textColor=inColor;			x=inX;			y=inY;			init();		}		//*****Initialization Routines				public function init():void{			debug("init()");						initVars();			initEvents();			initObjs();		}				private function initVars():void{			selectable=false;			defaultTextFormat=new TextFormat("_sans", 9,0,true);			textColor=_textColor;			text="";		}				private function initEvents():void{			appData.eventManager.listen(NAME, onStats);			addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);		}				private function initObjs():void{					}		//*****Core Functionality						//*****Event Handlers				private function onAddedToStage(e:Event):void{			removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			addEventListener(Event.ENTER_FRAME, onEnterFrame);		}				private function onEnterFrame(e:Event):void{			_time=getTimer();			if(_time-1000>_prevTime){				text=_title+"\n"+"FPS: "+Math.round(_framecount/(_time-_prevTime)*1000);				_prevTime=_time;				_framecount=0;			}						_framecount++;		}				private function onStats(e:MuleEvent):void{			/*debug("onStats()");			debug("e.data.sender=="+e.data.sender);			debug("e.data.type=="+e.data.type);*/			switch(e.data.type){																default:					debug("onStats()");					debug("*type not found");					debug("e.data.sender=="+e.data.sender);					debug("e.data.type=="+e.data.type);				break;							}		}				//*****Gets and Sets						//*****Utility Functions				//**visibility		public function show():void{			this.visible = true;		}				public function hide():void{			this.visible = false;		}				//**debug		private function debug(str:String):void{			appData.debug(NAME,str);		}				}//end class}//end package